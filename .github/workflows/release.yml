name: Build and Release
on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: make test
  build:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build for all platforms
      run: make platforms
    
    - name: Create archives
      run: |
        cd build
        mkdir -p compressed
        
        for file in funURL-*; do
          [[ -f "$file" ]] || continue
          
          # Use tar.gz for all platforms and rename binary to funurl
          if [[ "$file" == *.exe ]]; then
            # Windows executable - rename to funurl.exe in archive
            base_name=$(basename "$file" .exe)
            tar -czf "compressed/${base_name}.tar.gz" --transform "s|${file}|funurl.exe|" "$file" ../README.md ../LICENSE.md 2>/dev/null || true
          else
            # Unix executable - rename to funurl in archive
            tar -czf "compressed/${file}.tar.gz" --transform "s|${file}|funurl|" "$file" ../README.md ../LICENSE.md 2>/dev/null || true
          fi
        done
        
        ls -la compressed/
  
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: build/compressed/*
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/compressed/*.zip
          build/compressed/*.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
